{"version":3,"sources":["components/Navbar/Navbar.js","fetch/pokemon.js","components/PokemonList/PokemonList.js","components/Card/Card.js","components/Pagination.js","components/Pokedex/Pokedex.js","App.js","index.js"],"names":["Navbar","className","getAllPokemon","url","a","Promise","resolve","reject","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","getPokemon","PokemonList","pokemon","useState","pokeData","setPokeData","modalIsOpen","setModalIsOpen","pokeDataLoading","setPokeDataLoading","useLayoutEffect","document","querySelectorAll","forEach","t","innerHTML","classList","add","cardClick","e","map","p","name","target","dataset","i","key","onClick","data-pokemon","src","sprites","front_default","types","type","isOpen","onRequestClose","other","Object","keys","height","weight","abilities","ability","stats","s","stat","base_stat","Card","Pagination","gotoNextPage","gotoPrevPage","Modal","setAppElement","Pokedex","pokemonData","setPokemonData","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","response","next","previous","loadingPokemon","results","fetchData","all","pokemonRecord","_pokemonData","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85e61135.chunk.js","sourcesContent":["import React from 'react'\r\nimport './navbar.scss';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <div className=\"Navbar__logo\">\r\n                <h1>Pokemon</h1>\r\n            </div>\r\n            <nav>\r\n                <ul>\r\n                    <li><a>Pokedex</a></li>\r\n                    <li><a>Game</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport async function getAllPokemon(url){\r\n    return new Promise((resolve, reject) => {\r\n        let cancel;\r\n        axios\r\n            .get(url, {\r\n                cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n            })\r\n            .then(res => {\r\n                resolve(res.data);\r\n        });\r\n\r\n        return () => cancel();\r\n    })\r\n}\r\n\r\nexport async function getPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        let cancel;\r\n        axios\r\n            .get(url, {\r\n                cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n            })\r\n            .then(res => {\r\n                resolve(res.data);\r\n        });\r\n\r\n        return () => cancel();\r\n    })\r\n}","import React, { useState, useLayoutEffect, useEffect } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport './pokemodal.scss';\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport default function PokemonList({ pokemon }) {\r\n  const [pokeData, setPokeData] = useState({});\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [pokeDataLoading, setPokeDataLoading] = useState(true);\r\n\r\n  useLayoutEffect(() => {\r\n    const typeColor = () => {\r\n      document.querySelectorAll('.Card__type').forEach(t => {\r\n        if(t.innerHTML === \"grass\") {\r\n          t.classList.add('grass');\r\n        } else if(t.innerHTML === \"poison\") {\r\n          t.classList.add('poison');\r\n        } else if(t.innerHTML === \"flying\") {\r\n          t.classList.add('flying');\r\n        } else if(t.innerHTML === \"fire\") {\r\n          t.classList.add('fire');\r\n        } else if(t.innerHTML === \"water\") {\r\n          t.classList.add('water');\r\n        } else if(t.innerHTML === \"bug\") {\r\n          t.classList.add('bug');\r\n        } else if(t.innerHTML === \"normal\") {\r\n          t.classList.add('normal');\r\n        } else if(t.innerHTML === \"electric\") {\r\n          t.classList.add('electric');\r\n        } else if(t.innerHTML === \"ground\") {\r\n          t.classList.add('ground');\r\n        } else if(t.innerHTML === \"fairy\") {\r\n          t.classList.add('fairy');\r\n        } else if(t.innerHTML === \"fighting\") {\r\n          t.classList.add('fighting');\r\n        } else if(t.innerHTML === \"psychic\") {\r\n          t.classList.add('psychic');\r\n        } else if(t.innerHTML === \"steel\") {\r\n          t.classList.add('steel');\r\n        } else if(t.innerHTML === \"rock\") {\r\n          t.classList.add('rock');\r\n        } else if(t.innerHTML === \"ice\") {\r\n          t.classList.add('ice');\r\n        } else if(t.innerHTML === \"ghost\") {\r\n          t.classList.add('ghost');\r\n        } else if(t.innerHTML === \"dragon\") {\r\n          t.classList.add('dragon');\r\n        } else if(t.innerHTML === \"dark\") {\r\n          t.classList.add('dark');\r\n        }\r\n      })\r\n    }\r\n    typeColor();\r\n  }, []);\r\n\r\n  const cardClick = e => {\r\n    setModalIsOpen(true);\r\n    pokemon.map(p => {\r\n      if(p.name === e.target.dataset.pokemon) {\r\n        setPokeData(p);\r\n        setPokeDataLoading(false);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {pokemon.map((p, i) => (\r\n        <div key={i} className=\"Card\" onClick={cardClick} data-pokemon={p.name}>\r\n          {/*console.log(p)*/}\r\n          <img className=\"Card__img\" src={p.sprites.front_default} data-pokemon={p.name} />\r\n          <h1 className=\"Card__name\" data-pokemon={p.name}>{p.name}</h1>\r\n          <div className=\"Card__types\" data-pokemon={p.name}>\r\n            {p.types.map((t, i) => (\r\n              <span key={i} className=\"Card__type\" data-pokemon={p.name}>\r\n                {t.type.name}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n        <div className=\"PokeModal\">\r\n        {\r\n          pokeDataLoading ? <h1>No Data</h1> : (\r\n            <>\r\n              <div className=\"PokeModal__pokemon\">\r\n                <img className=\"PokeModal__pokemon__img\" src={pokeData.sprites.other[Object.keys(pokeData.sprites.other)[1]].front_default} />\r\n                <h1 className=\"PokeModal__pokemon__poke-name\">{pokeData.name}</h1>\r\n              </div>\r\n              <div className=\"PokeModal__info\">\r\n                <div className=\"PokeModal__info__bio\">\r\n\r\n                  <div className=\"PokeModal__info__bio__categories\">\r\n                    <h4 className=\"PokeModal__headers\">Height</h4>\r\n                    <p className=\"PokeModal__pars\">{pokeData.height}</p>\r\n                  </div>\r\n\r\n                  <div className=\"PokeModal__info__bio__categories\">\r\n                    <h4 className=\"PokeModal__headers\">Weight</h4>\r\n                    <p className=\"PokeModal__pars\">{pokeData.weight}</p>\r\n                  </div>\r\n\r\n                  {/*<div className=\"PokeModal__info__bio__categories\">\r\n                    <h4 className=\"PokeModal__headers\">Type</h4>\r\n                    <div className=\"Types\">{\r\n                      pokeData.types.map((t, i) => (\r\n                        <span key={i} className=\"Types__type\">\r\n                          {t.type.name}\r\n                        </span>\r\n                      ))\r\n                    }\r\n                    </div>\r\n                  </div>*/}\r\n\r\n                  <div className=\"PokeModal__info__bio__categories\">\r\n                    <h4 className=\"PokeModal__headers\">Abilities</h4>\r\n                    {pokeData.abilities.map((a, i) => (\r\n                      <p key={i} className=\"PokeModal__pars\">{a.ability.name}</p>\r\n                    ))}\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"PokeModal__info__stats\">\r\n                  {pokeData.stats.map((s, i) => (\r\n                    <div key={i} className=\"PokeModal__info__stats__stat\">\r\n                      <h4>{s.stat.name}:</h4>\r\n                      <p>{s.base_stat}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </>\r\n          )\r\n        }\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './card.scss';\r\nimport PokemonList from \"../PokemonList/PokemonList\";\r\n\r\nexport default function Card({ pokemon }) {\r\n    return (\r\n        <div className=\"Card-container\">\r\n            <PokemonList pokemon={pokemon} />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Pagination({ gotoNextPage, gotoPrevPage }) {\r\n  return (\r\n    <div className=\"Pagination\">\r\n      {gotoPrevPage && <a className=\"btn-primary\" onClick={gotoPrevPage}>Previous</a>}\r\n      {gotoNextPage && <a className=\"btn-primary\" onClick={gotoNextPage}>Next</a>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getAllPokemon, getPokemon } from './../../fetch/pokemon';\r\nimport Search from \"./../Search\";\r\nimport Card from \"./../Card/Card\";\r\nimport Pagination from \"./../Pagination\";\r\nimport './pokedex.scss';\r\n\r\nexport default function Pokedex() {\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(\r\n    \"https://pokeapi.co/api/v2/pokemon\"\r\n  );\r\n  const [nextPageUrl, setNextPageUrl] = useState();\r\n  const [prevPageUrl, setPrevPageUrl] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    async function fetchData() {\r\n      let response = await getAllPokemon(currentPageUrl);\r\n      setNextPageUrl(response.next);\r\n      setPrevPageUrl(response.previous);\r\n      await loadingPokemon(response.results);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [currentPageUrl]);\r\n\r\n  const loadingPokemon = async data => {\r\n    let _pokemonData = await Promise.all(data.map(async p => {\r\n      let pokemonRecord = await getPokemon(p.url);\r\n      return pokemonRecord\r\n    }));\r\n\r\n    setPokemonData(_pokemonData);\r\n  }\r\n\r\n  function gotoNextPage() {\r\n    setCurrentPageUrl(nextPageUrl);\r\n  }\r\n\r\n  function gotoPrevPage() {\r\n    setCurrentPageUrl(prevPageUrl);\r\n  }\r\n\r\n  return (\r\n      <div className=\"Pokedex\">\r\n      {\r\n        loading ? <h1>Loading...</h1> : (\r\n          <>\r\n            {/*<Search />*/}\r\n            <Card pokemon={pokemonData} />\r\n            <Pagination\r\n              gotoNextPage={nextPageUrl ? gotoNextPage : null}\r\n              gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\r\n            />\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Pokedex from \"./components/Pokedex/Pokedex\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Pokedex />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}